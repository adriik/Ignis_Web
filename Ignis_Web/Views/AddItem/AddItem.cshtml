@model Ignis_Web.Models.Itemki

@{
    ViewBag.Title = "AddItem";
}

<h2>AddItem</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Item</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-2">
                @Html.LabelFor(model => model.Typ, htmlAttributes: new { @class = "menu-label" })
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.Nazwa, htmlAttributes: new { @class = "menu-label" })
            </div>
            <div class="col-md-1">
                @Html.LabelFor(model => model.Dura, htmlAttributes: new { @class = "menu-label" })
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.Dostał, htmlAttributes: new { @class = "menu-label" })
            </div>
            <div class="col-md-1">
                @Html.LabelFor(model => model.Set, htmlAttributes: new { @class = "menu-label" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                <div class="form-group">
                    @Html.DropDownListFor(model => model.Drop_Type1, ViewBag.Typy as IEnumerable<SelectListItem>, new
                    {
                        data_placeholder = "Select Options",
                        data_dropup_auto = "true",
                        data_size = "2",
                        data_live_search = "true",
                        title = "Wybierz typ dropu",
                        data_style = "btn-secondary",
                        @class = "selectpicker dropup"
                    })
                    @Html.ValidationMessageFor(model => model.Drop_Type1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.Item_Drop1, ViewBag.ItemList as IEnumerable<SelectListItem>, new
                {
                    data_placeholder = "Select Options",
                    data_dropup_auto = "true",
                    data_size = "10",
                    data_live_search = "true",
                    title = "Wybierz Item",
                    data_style = "btn-secondary",
                    @class = "selectpicker dropup"
                })
                @Html.ValidationMessageFor(model => model.Item_Drop1, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-1">
                @Html.TextBoxFor(model => model.Item_Dura1, new { @class = "txt_Dura", @width = "50px" })
                @Html.ValidationMessageFor(model => model.Item_Dura1)
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    @Html.DropDownListFor(model => model.Drop_Receiver1, ViewBag.ListaLudzi as IEnumerable<SelectListItem>, new
                    {
                        data_placeholder = "Select Options",
                        data_dropup_auto = "true",
                        data_size = "10",
                        data_live_search = "true",
                        title = "Wybierz gracza",
                        data_style = "btn-secondary",
                        @class = "selectpicker dropup"
                    })
                    @Html.ValidationMessageFor(model => model.Drop_Receiver1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Item_Set1)
                    @Html.ValidationMessageFor(model => model.Item_Set1, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-default">Click</button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
