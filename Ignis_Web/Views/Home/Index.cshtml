@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron jumbotron-opacity">
    <div class="table-wrapper fixed-scrollbar">
        <table id="table" class="table table-dark text-center table-striped table-hover" style="width: 5em; margin-left: +5em;">
            <thead>
            <tr>
                <td class="first-col table-dark text-center table-striped table-hover">XXXXX</td>
                <td>WSP</td>
                @foreach (var czlonek in ViewBag.People)
                {

                    <td>@czlonek.Nickname</td>

                }
            </tr>
                </thead>
            <tbody>
            @for (int i = 1; i <= 5; i++)
            {
                <tr>
                    <td class="first-col table-dark text-center table-striped table-hover">Boss @i</td>
                    <td> </td>
                    @foreach (var czlonek in ViewBag.People)
                    {
                        switch (i)
                        {
                            case 1:
                                <td style="@czlonek.Kolor">@czlonek.Pierwszy</td>
                                break;
                            case 2:
                                <td>@czlonek.Drugi</td>
                                break;
                            case 3:
                                <td>@czlonek.Trzeci</td>
                                break;
                            case 4:
                                <td>@czlonek.Czwarty</td>
                                break;
                            case 5:
                                <td>@czlonek.Piaty</td>
                                break;
                        }
                    }
                </tr>
            }
            <tr>
                <td class="first-col table-dark text-center table-striped table-hover">Suma</td>
                <td>@ViewBag.TotalAll</td>
                    
                    @foreach (var czlonek in ViewBag.People)
                    {
                        <td>@czlonek.Total</td>
                    }
            </tr>
</tbody>
        </table>
    </div>
</div>
@model Ignis_Web.Models.Test
<div class="jumbotron">

    <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Dropdown button
        </button>
        <div class="dropdown-menu scrollable-menu" aria-labelledby="dropdownMenuButton">
            @foreach (var item in ViewBag.People)
            {
                <a class="dropdown-item" href="#">
                    @item.Nickname
                </a>
            }
        </div>
    </div>

    <select class="selectpicker dropup" data-dropup-auto="false" data-size="10" data-live-search="true" title="Wybierz gracza" data-style="btn-secondary">
        @foreach (var item in ViewBag.People)
        {
            <option value="@item.Nickname">@item.Nickname</option>
        }
    </select>


    @Html.DropDownListFor(model => model.UserName,
      ViewBag.ParameterValueList as IEnumerable<SelectListItem>,
       new
       {
           data_placeholder = "Select Options ",
           data_dropup_auto = "false",
           data_size = "10",
           data_live_search = "true",
           title = "Wybierz gracza",
           data_style = "btn-secondary",
           @class = "selectpicker dropup"
       })
</div>

@section Scripts {
    <script type="text/javascript">
        $(function ($) {
            var scrollbar = $('<div id="fixed-scrollbar"><div></div></div>').appendTo($(document.body));
            scrollbar.hide().css({
                overflowX: 'auto',
                position: 'fixed',
                width: '100%',
                bottom: 0
            });
            var fakecontent = scrollbar.find('div');

            function top(e) {
                return e.offset().top;
            }

            function bottom(e) {
                return e.offset().top + e.height();
            }

            var active = $([]);
            function find_active() {
                scrollbar.show();
                var active = $([]);
                $('.fixed-scrollbar').each(function () {
                    if (top($(this)) < top(scrollbar) && bottom($(this)) > bottom(scrollbar)) {
                        fakecontent.width($(this).get(0).scrollWidth);
                        fakecontent.height(1);
                        active = $(this);
                    }
                });
                fit(active);
                return active;
            }

            function fit(active) {
                if (!active.length) return scrollbar.hide();
                scrollbar.css({ left: active.offset().left, width: active.width() });
                fakecontent.width($(this).get(0).scrollWidth);
                fakecontent.height(1);
                delete lastScroll;
            }

            function onscroll() {
                var oldactive = active;
                active = find_active();
                if (oldactive.not(active).length) {
                    oldactive.unbind('scroll', update);
                }
                if (active.not(oldactive).length) {
                    active.scroll(update);
                }
                update();
            }

            var lastScroll;
            function scroll() {
                if (!active.length) return;
                if (scrollbar.scrollLeft() === lastScroll) return;
                lastScroll = scrollbar.scrollLeft();
                active.scrollLeft(lastScroll);
            }

            function update() {
                if (!active.length) return;
                if (active.scrollLeft() === lastScroll) return;
                lastScroll = active.scrollLeft();
                scrollbar.scrollLeft(lastScroll);
            }

            scrollbar.scroll(scroll);

            onscroll();
            $(window).scroll(onscroll);
            $(window).resize(onscroll);
        });
    </script>
}